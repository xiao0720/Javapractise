package radarGraph;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;

import javax.swing.JPanel;

/**
 * JPanel RadarGraph, a container.
 * 
 * @author Xiao
 *
 */
public class RadarGraph extends JPanel{
	public RadarGraph(){
		setBackground(Color.WHITE);
	}

/**
* PaintComponent funciton inside RadarGraph.java.
* This method is from JPanel class, whenever the JVM needs to redraw the element on the screen, it executes.
* Graphic2D is implementation of abstract class Graphics used for 2D drawing.
*/
	@Override
	public void paintComponent(Graphics g){
		//clear the screen
		super.paintComponent(g);
		Graphics2D g2d = (Graphics2D) g;
		drawWeb(g2d);
	}

/**
* Calculate X and Y of the window
*/
	private void drawWeb(Graphics2D g2d){
		Dimension d = this.getSize();
		int X = (int)(d.getWidth())/2;
		int Y = (int)(d.getHeight())/2;
		double R = 0.9 * (d.getHeight())/2;
		double[] Theta = new double[5];

		for (int i = 0; i<5; i++) {
			Theta[i] = (Math.PI*2*i)/5 + 1.1*Math.PI;
		}

		int X1, Y1;
		for (int i = 0; i<5; i++) {
			X1 = X + (int)(R*Math.cos(Theta[i]));
			Y1 = Y + (int)(R*Math.sin(Theta[i]));
			g2d.drawLine(X, Y, X1, Y1);	
		}

		double[][] arr = new double[3][5];
		for (double[] num: arr) {
			for (double number: num) {
				number = Math.random(10);
			}
		}

		
	}

}
