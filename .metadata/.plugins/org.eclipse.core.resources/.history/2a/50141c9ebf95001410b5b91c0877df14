package morePractises;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class JFrameAndListener {

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					JFrameAndListener window = new JFrameAndListener();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public JFrameAndListener() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame("Swing Playground");
		frame.setBounds(0, 0, 600, 600);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JLabel jLabel1 = new JLabel("Number of words: ");
		JTextField jTextField1 = new JTextField();
		jTextField1.addKeyListener(new KeyAdapter() {
/*
//			@Override
//			public void keyPressed(KeyEvent e) {
				//jLabel1.setText("Number of words: " + jTextField1.getText().length());
				//System.out.println(jTextField1.getText());
//			}
//tells me only key released can get the correct content otherwise last type is missing.
*/
			@Override
			public void keyReleased(KeyEvent e) {
				jLabel1.setText("Number of words: " + jTextField1.getText().length());
				//System.out.println(jTextField1.getText());
			}
		});
		
/*		
		jTextField1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String text = jTextField1.getText();
				int number = text.length();
				jLabel1.setText("Number of words: " + number);
			}
		});
		
*/		
		jTextField1.setBounds(20, 20, 196, 150);
		frame.getContentPane().add(jTextField1);

		//JLabel jLabel1 = new JLabel("Number of words: ");
		jLabel1.setBounds(284, 79, 196, 32);
		frame.getContentPane().add(jLabel1);
		
		String[] items = {"", "item1", "item2", "item3"};
		
		JComboBox jComboBox1 = new JComboBox(items);
		jComboBox1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				//String itemName = items[jComboBox1.getItemCount()];	
				if(!((String)jComboBox1.getSelectedItem()).equals("")){
					JOptionPane.showMessageDialog(frame, jComboBox1.getSelectedItem()+" selected.");
				}								
			}
		});
		jComboBox1.setBounds(20, 226, 196, 32);
		jComboBox1.setSelectedIndex(0);
		frame.getContentPane().add(jComboBox1);
		
		JLabel jLabel2 = new JLabel("Enter Here -><-");
		jLabel2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent e) {
				jLabel2.setText("Entered");
			}
			@Override
			public void mouseExited(MouseEvent e) {
				jLabel2.setText("Enter Here -><-");
			}
		});
		jLabel2.setBounds(284, 225, 196, 32);
		frame.getContentPane().add(jLabel2);
		
		JLabel jLabelAxis = new JLabel("Axis: ");
		JLabel jLabelTarget = new JLabel("Target");

		jLabelTarget.addMouseMotionListener(new MouseMotionAdapter() {
			@Override
			public void mouseDragged(MouseEvent e) {
				 	transX += e.getX() - MouseX;
		            transY += e.getY() - MouseY;
		            MouseX = e.getX();
		            MouseY = e.getY();
				jLabelTarget.setLocation(e.getX(), e.getY());
				jLabelAxis.setText("Axis: " + e.getX() + ", " + e.getY());
			}
		});
		jLabelTarget.setBounds(89, 308, 50, 50);
		frame.getContentPane().add(jLabelTarget);
		
		//JLabel jLabelAxis = new JLabel("Axis:");
		jLabelAxis.setBounds(6, 548, 200, 24);
		frame.getContentPane().add(jLabelAxis);
		
		




	}

}
